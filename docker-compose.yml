version: '3.9'

networks:
  ass_network:

services:

  rabbit:
    image: rabbitmq:3-management
    container_name: rabbit
    hostname: rabbit
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - ass_network

  targetservice:
    build:
      context: ./TargetService/
    container_name: TargetService
    ports:
      - "3001:3001"
      - "9001:9229"
    volumes:
      - "./TargetService:/opt/project/"
      - "/opt/project/node_modules"
    environment:
      PORT: 3001
      MONGO_URL: "mongodb://${DBUSER}:${DBPASSWORD}@TargetDatabase:27017"
      ENV: ${ENV}
      ROUTING_KEY: "Target"
    command: yarn run ${ENV}
    depends_on:
      - targetdatabase
    networks:
      - ass_network

  scoreservice:
    build:
      context: ./ScoreService/
    container_name: ScoreService
    ports:
      - "3002:3002"
    volumes:
      - "./ScoreService:/opt/project/"
      - "./config:/opt/config"
      - "/opt/project/node_modules"
    environment:
      PORT: 3002
      MONGO_URL: "mongodb://${DBUSER}:${DBPASSWORD}@ScoreDatabase:27017"
      ENV: ${ENV}
      JWT_SECRET: ${JWT_SECRET}
      API_KEY: ${API_KEY}
      ROUTING_KEY: "Score"
    command: sh startup.sh
    depends_on:
      - scoredatabase
    networks:
      - ass_network

  gatewayservice:
    build:
      context: ./ApiGateway/
    container_name: GatewayService
    ports:
      - "3003:3001"
    volumes:
      - "./ApiGateway:/opt/project/"
      - "./config:/opt/config"
      - "/opt/project/node_modules"
    environment:
      PORT: 3001
      ENV: ${ENV}
      JWT_SECRET: ${JWT_SECRET}
      API_KEY: ${API_KEY}
      AUTHURL: ${AUTHURL}
      SCOREURL: ${SCOREURL}
    command: sh startup.sh
    networks:
      - ass_network

  authservice:
    build:
      context: ./AuthService/
    container_name: AuthService
    ports:
      - "3004:3004"
    volumes:
      - "./AuthService:/opt/project/"
      - "./config:/opt/config"
      - "/opt/project/node_modules"
    environment:
      PORT: 3004
      ENV: ${ENV}
      JWT_SECRET: ${JWT_SECRET}
      API_KEY: ${API_KEY}
      AUTHURL: ${AUTHURL}
      MONGO_URL: "mongodb://${DBUSER}:${DBPASSWORD}@AuthDatabase:27017"
    command: sh startup.sh
    networks:
      - ass_network


  authdatabase:
    image: mongo:latest
    container_name: AuthDatabase
    restart: on-failure
    ports:
      - "3014:27017"
      - "2003:27018"
    volumes:
      - ./volumes/AuthDatabase:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${DBUSER}
      MONGO_INITDB_ROOT_PASSWORD: ${DBPASSWORD}
    networks:
      - ass_network

  targetdatabase:
    image: mongo:latest
    container_name: TargetDatabase
    restart: on-failure
    ports:
      - "3013:27017"
      - "2001:27018"
    volumes:
      - ./volumes/TargetDatabase:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${DBUSER}
      MONGO_INITDB_ROOT_PASSWORD: ${DBPASSWORD}
    networks:
      - ass_network

  scoredatabase:
    image: mongo:latest
    container_name: ScoreDatabase
    restart: on-failure
    ports:
      - "3012:27017"
      - "2002:27018"
    volumes:
      - ./volumes/ScoreDatabase:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${DBUSER}
      MONGO_INITDB_ROOT_PASSWORD: ${DBPASSWORD}
    networks:
      - ass_network

